buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17' // 수정된 부분: targetCompatibility 추가

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot WebFlux 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Reactor Netty 의존성 추가 (보통 Spring WebFlux에 포함됨)
    implementation 'io.projectreactor.netty:reactor-netty'

    // Jackson (JSON 처리용)
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.json:json:20230227'  // 최신 버전 확인 후 변경 가능
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa" // 수정된 부분: QueryDSL 관련 설정 간소화

    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    annotationProcessor "javax.persistence:javax.persistence-api"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'net.coobird:thumbnailator:0.4.16'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
    useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"] // 수정된 부분: QueryDSL 생성 경로 명시
        }
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("$projectDir/build/generated") // 생성 파일 경로 설정
}
// React 관련 빌드 설정
processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    // 수정된 부분: npm audit fix 제거 및 명령어 최적화
    commandLine = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
            ? ['npm.cmd', 'install']
            : ['npm', 'install']
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    // 수정된 부분: OS별 npm build 명령어 처리 간소화
    commandLine = System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')
            ? ['npm.cmd', 'run', 'build']
            : ['npm', 'run', 'build']
}

task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}
